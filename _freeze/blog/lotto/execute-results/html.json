{
  "hash": "4568ad0ebfbd5f9b3a022a7d61076782",
  "result": {
    "markdown": "---\ndate: 2021-08-05T00:00:00+0800\ntitle: \"How to Scrape and Prepare PCSO Lottery Data for Analysis in Excel\"\nsubtitle: \"Scraping the PCSO lottery website for historical game data for later analysis.\"\n# description: \"A post detailing how one might go about reading a textbook effectively.\"\nimage: /assets/images/lottery-waldemar-brandt-unsplash-thumb.webp\nimage-alt: \"Some lottery tickets scattered around.\"\ncategories: [\"How To\", \"Code\"]\nkeywords: [\"web scraping\", \"Microsoft Excel\", \"python\", \"selenium\", \"lottery\", \"tutorial\"]\n# author: \n# draft: true\ncode-fold: false\n---\n\nIn this post we will be scraping the historical lottery data for various games at the Philippine Charity Sweepstakes Office website so we can analyze it for later.\n\n<!--more-->\n\n## Scraping the Data\n\nLet us first install the modules we're going to need for scraping the website (skip this if you already have them).\n\n```python\npython -m pip install selenium beautifulsoup4 pandas\n```\n\nAnd then import them for our project:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Selenium for simulating clicks in a browser\nfrom selenium import webdriver\nfrom selenium.webdriver.support.ui import Select\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as ec\n\n# BeautifulSoup for scraping\nfrom bs4 import BeautifulSoup\n\n# pandas for processing the data\nimport pandas as pd\n\n# datetime for getting today's date and formatting\nfrom datetime import datetime\nfrom datetime import date\nfrom datetime import datetime, timedelta\n```\n:::\n\n\n### Simulate clicks in the Browser with `selenium`\n\nFor simulating clicks in a web browser, we are going to use `selenium`. We're also going to need to download a web driver such as Microsoft Edge's [webdriver](https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium/) (of course, you need the corresponding browser [Microsoft Edge](https://www.microsoft.com/en-us/edge) to be installed). Since I'm on Windows, MS Edge comes right out of the box so I will use it, but feel free to use your own preferred browser that has a driver such as [Chrome](https://chromedriver.chromium.org/home) or [Firefox](https://github.com/mozilla/geckodriver/releases).\n\nNow set the path to where the webdriver executable is as well as the URL to the lottery data is located.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# Set the path to where the webdriver executuble is\n# For me it's the following:\npath = (\"C:\\\\Users\\\\Je Sian Keith Herman\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python39\\\\Scripts\\\\msedgedriver.exe\")\n\n# Designate the url to be scraped to a variable\nurl = \"https://www.pcso.gov.ph/SearchLottoResult.aspx\"\n```\n:::\n\n\nNow initialize a Selenium session by directing it to the webdriver executable.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Initialize the Edge webdriver\ndriver = webdriver.Edge(executable_path=path) \n\n# Grab the web page\ndriver.get(url)                              \n```\n:::\n\n\nOne problem with the page though is that if you inspect the page's source there is class called `pre-con` in a div. If you would try to just have the driver proceed without waiting for a few seconds some of the buttons are unclickable and blocked by this div container, so we have to tell the WebDriver to wait for a set amount of time. I discovered this after a while of troubleshooting why the selenium cannot give any input to the web form.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Designate a variable for waiting for the page to load\nwait = WebDriverWait(driver, 10)\n\n# wait for the div class \"pre-con\" to be invisible to ensure clicks work\nwait.until(ec.invisibility_of_element_located((By.CLASS_NAME, \"pre-con\")))\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n<selenium.webdriver.remote.webelement.WebElement (session=\"96579580909850c4aa664c93c74c1fcb\", element=\"803cd542-e789-4007-90a5-037dac387943\")>\n```\n:::\n:::\n\n\nNow that the wait is over let us now proceed to entering our parameters in the ASP.NET web form (the form with filters we see if we visit the web page) for the data we need. We are going to do that by using the `.find_element_by_id` method here for the options because we know their `id`s by inspecting the page's source at the place where the dropdown menus are.\n\nTip: To inspect the dropdown menu, right-click on it and navigate to \"Developer Tools\" and select \"Inspect\" (or press `F12`). We then get the value inside of the `id` parameter.\n\n![The Search Lotto Form](/assets/images/search-lotto.webp)\n\nWe want the end date to be today to get the latest data from all the games and the start date to be the earliest possible option which is `January 1, 2012` in the dropdown menu. As for the lotto game we want all games. We will just split the data up later into smaller dataframes using pandas for each lotto game, so that we only need to scrape the website every time we want to update our data. But first get today's date which will be used later.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Get today's date with the datetime import\ntoday = date.today()\n\n# Store the current year, month, and day to variables\ntd_year = today.strftime(\"%Y\")\ntd_month = today.strftime(\"%B\")\ntd_day = today.strftime(\"%d\").lstrip(\"0\").replace(\" 0\", \" \")\n\nstartyr = int(td_year) - 10\nstartyr = str(startyr)\nprint(\"Today is \" + td_month + \" \" + td_day + \", \" + td_year + \".\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nToday is September 22, 2022.\n\n```\n:::\n:::\n\n\nNow let's have Selenium and the webdriver find the elements of the form and select the parameters we want in the form options.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# Select Start Date as January 1, 2012\nstart_month = Select(driver.find_element_by_id(\n    \"cphContainer_cpContent_ddlStartMonth\"))\nstart_month.select_by_value(\"January\")\n\nstart_day = Select(driver.find_element_by_id(\n    \"cphContainer_cpContent_ddlStartDate\"))\nstart_day.select_by_value(\"1\")\n\nstart_year = Select(driver.find_element_by_id(\n    \"cphContainer_cpContent_ddlStartYear\"))\nstart_year.select_by_value(startyr)\n\n# Select End Date as Today\nend_month = Select(driver.find_element_by_id(\n    \"cphContainer_cpContent_ddlEndMonth\"))\nend_month.select_by_value(td_month)\n\nend_day = Select(driver.find_element_by_id(\"cphContainer_cpContent_ddlEndDay\"))\nend_day.select_by_value(td_day)\n\nend_year = Select(driver.find_element_by_id(\n    \"cphContainer_cpContent_ddlEndYear\"))\nend_year.select_by_value(td_year)\n\n# Lotto Game\ngame = Select(driver.find_element_by_id(\n    \"cphContainer_cpContent_ddlSelectGame\"))\n\n# If you inspect the page, the value of the option for \"All Games\" is 0\ngame.select_by_value('0')\n\n# Submit the parameters by clicking the search button\nsearch_button = driver.find_element_by_id(\"cphContainer_cpContent_btnSearch\")\nsearch_button.click()\n```\n:::\n\n\n## Scraping the data using `BeautifulSoup`\n\nNow it's time to scrape the data from the current page's session with `BeautifulSoup` to get the data we need.\n\nFirstly, feed the page's source code into Beautiful Soup and then have it find our results by `id`. Inspect the source again) and get all the table's rows by their attributes such as `class`.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# Feed the page's source code into Beautiful Soup\ndoc = BeautifulSoup(driver.page_source, \"html.parser\")\n\n# Find the table of the results by id (\nrows = doc.find('table', id='cphContainer_cpContent_GridView1').find_all(\n    'tr', attrs={'class': \"alt\"})\n```\n:::\n\n\nNow time to put the data in a python list/dictionary.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# Initialize a list to hold our data\nentries = []\n\n# Now loop through the rows and put the data into the list to make a table\nfor row in rows:\n    cells = row.select(\"td\")\n    entry = {\n        \"Game\": cells[0].text,\n        \"Combination\": cells[1].text,\n        \"Date\": cells[2].text,\n        \"Prize\": cells[3].text,\n        \"Winners\": cells[4].text,\n    }\n    entries.append(entry)\n```\n:::\n\n\n## Processing the Data\n\n### Cleaning Up the Data with `pandas`\n\nNow that we have the data in a list, it is now time to put it in a `pandas` dataframe and clean it up. There are duplicates in the data if you examine it closely so we have to remove those. We also need to get the data into the proper data types to make it easier for us to process down the line (i.e.Â sanitization).\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# Turn the list into a DataFrame\ndf = pd.DataFrame(entries)\n\n# Remove duplicate rows\ndf.drop_duplicates(inplace=True, keep=False)\n\n# Remove rows that have no combination associated\ndf = df[df[\"Combination\"] != \"-                \"]\n```\n:::\n\n\nThe part `df = df[df[\"Combination\"] != \"- \"]` above is to look for and remove entries that do not have a combination. I also found this after hours of figuring out why I cannot do certain operations on the data like converting them into the proper data types. Speaking of data types, let's go convert the data now.\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# Convert the dates to datetime type\ndf[\"Date\"] = df[\"Date\"].astype('datetime64[ns]')\n\n# Remove the commas in the prize amounts\ndf[\"Prize\"] = df[\"Prize\"].replace(',','', regex=True)\n    \n# Convert data types of Prize and Winners to float and integers\ndf[\"Prize\"] = df[\"Prize\"].astype(float)     # float because there are still centavos\ndf[\"Winners\"] = df[\"Winners\"].astype(int)\n```\n:::\n\n\nNow let's look at our data so far:\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Game</th>\n      <th>Combination</th>\n      <th>Date</th>\n      <th>Prize</th>\n      <th>Winners</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Megalotto 6/45</td>\n      <td>31-39-01-42-20-26</td>\n      <td>2022-09-21</td>\n      <td>53777129.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Suertres Lotto 11AM</td>\n      <td>7-4-8</td>\n      <td>2022-09-21</td>\n      <td>4500.0</td>\n      <td>226</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Suertres Lotto 9PM</td>\n      <td>1-6-3</td>\n      <td>2022-09-21</td>\n      <td>4500.0</td>\n      <td>643</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>EZ2 Lotto 4PM</td>\n      <td>05-05</td>\n      <td>2022-09-21</td>\n      <td>4000.0</td>\n      <td>299</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Ultra Lotto 6/58</td>\n      <td>04-31-30-21-53-06</td>\n      <td>2022-09-20</td>\n      <td>80104597.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>16497</th>\n      <td>4D Vismin</td>\n      <td>0-6-3-3</td>\n      <td>2012-01-02</td>\n      <td>40672.0</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>16498</th>\n      <td>Suertres Lotto 4PM</td>\n      <td>3-9-3</td>\n      <td>2012-01-02</td>\n      <td>4500.0</td>\n      <td>256</td>\n    </tr>\n    <tr>\n      <th>16499</th>\n      <td>EZ2 Lotto 9PM</td>\n      <td>03-13</td>\n      <td>2012-01-02</td>\n      <td>4000.0</td>\n      <td>540</td>\n    </tr>\n    <tr>\n      <th>16500</th>\n      <td>EZ2 Lotto 11AM</td>\n      <td>31-24</td>\n      <td>2012-01-02</td>\n      <td>4000.0</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>16501</th>\n      <td>Grand Lotto 6/55</td>\n      <td>44-14-51-52-39-08</td>\n      <td>2012-01-02</td>\n      <td>71768080.8</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>16495 rows Ã 5 columns</p>\n</div>\n```\n:::\n:::\n\n\n## Saving the data to an MS Excel workbook\n\nSo far it's looking good. Since we're now here it's time for us to split this huge dataframe of ours into smaller dataframes by the type of lotto game. While we're at it let's also fix the time for the Suertres Lotto and EZ2 Lotto games so that they are included in the data and not as a separate category.\n\nAfter doing that, let's save that into an Excel workbook so that we do not have to scrape every time we want to analyze the data.\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\n# Sort the DataFrame by game\ndf.sort_values(by=[\"Game\"], inplace=True)\n\n# Get a list of the games\ngames = df[\"Game\"].unique().tolist()\n\n# Now we can create DataFrames for each game\nlotto_658 = df.loc[df[\"Game\"]==\"Ultra Lotto 6/58\"].copy()\nlotto_655 = df.loc[df[\"Game\"]==\"Grand Lotto 6/55\"].copy()\n\n# Sidenote: Super Lotto 6/49 and Mega Lotto 6/45 have different values from\n# what was on the dropdown menu\nlotto_649 = df.loc[df[\"Game\"]==\"Superlotto 6/49\"].copy()\nlotto_645 = df.loc[df[\"Game\"]==\"Megalotto 6/45\"].copy()\n\n# Anyways, continuing...\nlotto_642 = df.loc[df[\"Game\"]==\"Lotto 6/42\"].copy()\nlotto_6d = df.loc[df[\"Game\"]==\"6Digit\"].copy()\nlotto_4d = df.loc[df[\"Game\"]==\"4Digit\"].copy()\n\nlotto_3da = df.loc[df[\"Game\"]==\"Suertres Lotto 11AM\"].copy()\nlotto_3db = df.loc[df[\"Game\"]==\"Suertres Lotto 4PM\"].copy()\nlotto_3dc = df.loc[df[\"Game\"]==\"Suertres Lotto 9PM\"].copy()\n\nlotto_2da = df.loc[df[\"Game\"]==\"EZ2 Lotto 11AM\"].copy()\nlotto_2db = df.loc[df[\"Game\"]==\"EZ2 Lotto 4PM\"].copy()\nlotto_2dc = df.loc[df[\"Game\"]==\"EZ2 Lotto 9PM\"].copy()\n```\n:::\n\n\nLet's look at one of the dataframes:\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nlotto_2da.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Game</th>\n      <th>Combination</th>\n      <th>Date</th>\n      <th>Prize</th>\n      <th>Winners</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>10278</th>\n      <td>EZ2 Lotto 11AM</td>\n      <td>03-14</td>\n      <td>2015-12-06</td>\n      <td>4000.0</td>\n      <td>207</td>\n    </tr>\n    <tr>\n      <th>2334</th>\n      <td>EZ2 Lotto 11AM</td>\n      <td>16-31</td>\n      <td>2021-04-18</td>\n      <td>4000.0</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>430</th>\n      <td>EZ2 Lotto 11AM</td>\n      <td>30-15</td>\n      <td>2022-06-19</td>\n      <td>4000.0</td>\n      <td>114</td>\n    </tr>\n    <tr>\n      <th>16369</th>\n      <td>EZ2 Lotto 11AM</td>\n      <td>16-17</td>\n      <td>2012-01-28</td>\n      <td>4000.0</td>\n      <td>92</td>\n    </tr>\n    <tr>\n      <th>14667</th>\n      <td>EZ2 Lotto 11AM</td>\n      <td>30-21</td>\n      <td>2013-02-09</td>\n      <td>4000.0</td>\n      <td>49</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nFor the Suertres Lotto and EZ2 Lotto games the games are split into 11:00 AM, 4:00 PM, and 9:00 PM games. Let's fix that by assigning them the proper datetime values in the Date column and combining them into bigger dataframes\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n# Add 11 hours to the datetime for Suertres Lotto 11AM game to match because of time zones\nlotto_3da[\"Date\"] = lotto_3da[\"Date\"] + timedelta(hours=11)\n\n# Add 16 hours to the datetime for Suertres Lotto 4PM game to match\nlotto_3db[\"Date\"] = lotto_3db[\"Date\"] + timedelta(hours=16)\n\n# Add 21 hours to the datetime for Suertres Lotto 9PM game to match\nlotto_3dc[\"Date\"] = lotto_3dc[\"Date\"] + timedelta(hours=21)\n\n# Rename all the game entries as just Suertres Lotto\nlotto_3da[\"Game\"] = \"Suertres Lotto\"\nlotto_3db[\"Game\"] = \"Suertres Lotto\"\nlotto_3dc[\"Game\"] = \"Suertres Lotto\"\n\n# Combine the three Suertres Lotto DataFrames into one\nlotto_3d = lotto_3da\nlotto_3d = lotto_3d.append(lotto_3db)\nlotto_3d = lotto_3d.append(lotto_3dc)\n```\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\n# Do the same for EZ2 Lotto\nlotto_2da[\"Date\"] = lotto_2da[\"Date\"] + timedelta(hours=11)\nlotto_2db[\"Date\"] = lotto_2db[\"Date\"] + timedelta(hours=16)\nlotto_2dc[\"Date\"] = lotto_2dc[\"Date\"] + timedelta(hours=21)\n\n# Rename all the game entries as just EZ2 Lotto\nlotto_2da[\"Game\"] = \"EZ2 Lotto\"\nlotto_2db[\"Game\"] = \"EZ2 Lotto\"\nlotto_2dc[\"Game\"] = \"EZ2 Lotto\"\n\n# Combine the three EZ2 Lotto DataFrames into one\nlotto_2d = lotto_2da\nlotto_2d = lotto_2d.append(lotto_2db)\nlotto_2d = lotto_2d.append(lotto_2dc)\n```\n:::\n\n\nNow let's look at one of them again to see if we were successful:\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nlotto_2da\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Game</th>\n      <th>Combination</th>\n      <th>Date</th>\n      <th>Prize</th>\n      <th>Winners</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>10606</th>\n      <td>EZ2 Lotto</td>\n      <td>29-15</td>\n      <td>2015-09-23 11:00:00</td>\n      <td>4000.0</td>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>10571</th>\n      <td>EZ2 Lotto</td>\n      <td>28-02</td>\n      <td>2015-10-01 11:00:00</td>\n      <td>4000.0</td>\n      <td>157</td>\n    </tr>\n    <tr>\n      <th>12052</th>\n      <td>EZ2 Lotto</td>\n      <td>26-25</td>\n      <td>2014-10-22 11:00:00</td>\n      <td>4000.0</td>\n      <td>67</td>\n    </tr>\n    <tr>\n      <th>3251</th>\n      <td>EZ2 Lotto</td>\n      <td>23-13</td>\n      <td>2020-09-09 11:00:00</td>\n      <td>4000.0</td>\n      <td>39</td>\n    </tr>\n    <tr>\n      <th>3247</th>\n      <td>EZ2 Lotto</td>\n      <td>31-13</td>\n      <td>2020-09-10 11:00:00</td>\n      <td>4000.0</td>\n      <td>89</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>10278</th>\n      <td>EZ2 Lotto</td>\n      <td>03-14</td>\n      <td>2015-12-06 11:00:00</td>\n      <td>4000.0</td>\n      <td>207</td>\n    </tr>\n    <tr>\n      <th>2334</th>\n      <td>EZ2 Lotto</td>\n      <td>16-31</td>\n      <td>2021-04-18 11:00:00</td>\n      <td>4000.0</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>430</th>\n      <td>EZ2 Lotto</td>\n      <td>30-15</td>\n      <td>2022-06-19 11:00:00</td>\n      <td>4000.0</td>\n      <td>114</td>\n    </tr>\n    <tr>\n      <th>16369</th>\n      <td>EZ2 Lotto</td>\n      <td>16-17</td>\n      <td>2012-01-28 11:00:00</td>\n      <td>4000.0</td>\n      <td>92</td>\n    </tr>\n    <tr>\n      <th>14667</th>\n      <td>EZ2 Lotto</td>\n      <td>30-21</td>\n      <td>2013-02-09 11:00:00</td>\n      <td>4000.0</td>\n      <td>49</td>\n    </tr>\n  </tbody>\n</table>\n<p>1883 rows Ã 5 columns</p>\n</div>\n```\n:::\n:::\n\n\nLet's see also one of the combined dataframes:\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nlotto_2d\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Game</th>\n      <th>Combination</th>\n      <th>Date</th>\n      <th>Prize</th>\n      <th>Winners</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>10606</th>\n      <td>EZ2 Lotto</td>\n      <td>29-15</td>\n      <td>2015-09-23 11:00:00</td>\n      <td>4000.0</td>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>10571</th>\n      <td>EZ2 Lotto</td>\n      <td>28-02</td>\n      <td>2015-10-01 11:00:00</td>\n      <td>4000.0</td>\n      <td>157</td>\n    </tr>\n    <tr>\n      <th>12052</th>\n      <td>EZ2 Lotto</td>\n      <td>26-25</td>\n      <td>2014-10-22 11:00:00</td>\n      <td>4000.0</td>\n      <td>67</td>\n    </tr>\n    <tr>\n      <th>3251</th>\n      <td>EZ2 Lotto</td>\n      <td>23-13</td>\n      <td>2020-09-09 11:00:00</td>\n      <td>4000.0</td>\n      <td>39</td>\n    </tr>\n    <tr>\n      <th>3247</th>\n      <td>EZ2 Lotto</td>\n      <td>31-13</td>\n      <td>2020-09-10 11:00:00</td>\n      <td>4000.0</td>\n      <td>89</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>5923</th>\n      <td>EZ2 Lotto</td>\n      <td>10-31</td>\n      <td>2018-08-24 21:00:00</td>\n      <td>4000.0</td>\n      <td>352</td>\n    </tr>\n    <tr>\n      <th>5918</th>\n      <td>EZ2 Lotto</td>\n      <td>25-17</td>\n      <td>2018-08-25 21:00:00</td>\n      <td>4000.0</td>\n      <td>121</td>\n    </tr>\n    <tr>\n      <th>4524</th>\n      <td>EZ2 Lotto</td>\n      <td>12-20</td>\n      <td>2019-07-07 21:00:00</td>\n      <td>4000.0</td>\n      <td>355</td>\n    </tr>\n    <tr>\n      <th>11858</th>\n      <td>EZ2 Lotto</td>\n      <td>31-02</td>\n      <td>2014-12-06 21:00:00</td>\n      <td>4000.0</td>\n      <td>108</td>\n    </tr>\n    <tr>\n      <th>12935</th>\n      <td>EZ2 Lotto</td>\n      <td>07-12</td>\n      <td>2014-03-26 21:00:00</td>\n      <td>4000.0</td>\n      <td>597</td>\n    </tr>\n  </tbody>\n</table>\n<p>5539 rows Ã 5 columns</p>\n</div>\n```\n:::\n:::\n\n\nSo far so good. The final stretch here is going to be to save our data to Microsoft Excel and we can achieve that easily with `pandas` with `pandas.DataFrame.to_excel`.\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\n# Create Excel writer object\nwriter = pd.ExcelWriter(\"lotto.xlsx\")\n\n# Write DataFrames to excel worksheets\ndf.to_excel(writer, \"All Data\")\nlotto_658.to_excel(writer, \"Ultra Lotto 6-58\")\nlotto_655.to_excel(writer, \"Grand Lotto 6-55\")\nlotto_649.to_excel(writer, \"Super Lotto 6-49\")\nlotto_645.to_excel(writer, \"Mega Lotto 6-45\")\nlotto_642.to_excel(writer, \"Lotto 6-42\")\n\nlotto_6d.to_excel(writer, \"6 Digit\")\nlotto_4d.to_excel(writer, \"4 Digit\")\nlotto_3d.to_excel(writer, \"Suertres Lotto\")\nlotto_2d.to_excel(writer, \"EZ2 Lotto\")\n\n# Save the Excel workbook\nwriter.save()\n```\n:::\n\n\n## Conclusion\n\nWith that we have saved an Excel file named [`lotto.xlsx`](lotto.xlsx) where all of our scraped data have been put in. Now let's proceed to making the scripts for analyzing the Lotto data. For example, we might look at the frequency of combinations, how frequent some numbers appear compared to others, or the expectancy value is for each drawing date in part two.\n\n",
    "supporting": [
      "lotto_files\\figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}